
function ifExpressionValue(cond,then_,else_) if cond then return then_ else return else_ end end
function ifExpression(cond,then_,else_) if cond then return then_() else return else_() end end
function eps()              return 1e-18 end
function pi()               return 3.1415926535897932384 end
function random()           return math.random() end
function irandom()          return math.floor(math.random() * 4294967296) end
function clip(x,low,high)   if x > high then return high else if x < low then return low else return x end end end
function real(x)            return x end
function int(x)             local int_part,_ = math.modf(x) return int_part end
function sin(x)             return math.sin(x) end
function cos(x)             return math.cos(x) end
function abs(x)             return math.abs(x) end
function exp(x)             return math.exp(x) end
function floor(x)           return math.floor(x) end
function tan(x)             return math.tan(x) end
function tanh(x)            return math.tanh(x) end
function sqrt(x)            return x end
function set(a, i, v)       a[i+1]=v end
function get(a, i)          return a[i+1] end

function Array_return_foo3_type_init(_ctx)
   _ctx.y = 0
end

function Array_return_foo4_type_init(_ctx)
   _ctx.y = 0
end

function Array_return_foo5_type_init(_ctx)
   _ctx.Array_return_foo5_ret_0 = 0
   local i_0 = 0
   while (i_0 < 3) do
      do
         _ctx.Array_return_foo5_ret_1[i_0] = 0
         i_0 = (1 + i_0)
      end
   end
end

function Array_return_foo6_type_init(_ctx)
   _ctx.Array_return_foo6_ret_0 = 0
   local i_0 = 0
   while (i_0 < 3) do
      do
         _ctx.Array_return_foo6_ret_1[i_0] = 0
         i_0 = (1 + i_0)
      end
   end
end

function Array_return_foo1()
   local _array_0 = {1, 2, 3}
   return _array_0
end

function Array_return_foo2()
   local x = {1, 2, 3}
   return x
end

function Array_return_foo3(_ctx)
   _ctx.y = 0
   local _array_0 = {1, 2, 3}
   return _array_0
end

function Array_return_foo4(_ctx)
   _ctx.y = 0
   local x = {1, 2, 3}
   return x
end

function Array_return_foo5(_ctx)
   local _array_0 = {1, 2, 3}
   _ctx.Array_return_foo5_ret_0 = 1
   _ctx.Array_return_foo5_ret_1 = _array_0
   return 
end

function Array_return_foo6(_ctx)
   local y = 1
   local x = {1, 2, 3}
   _ctx.Array_return_foo6_ret_0 = y
   _ctx.Array_return_foo6_ret_1 = x
   return 
end

