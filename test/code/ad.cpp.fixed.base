/* This code was generated by the Vult compiler v1-dev https://github.com/modlfo/vult */

#include "ad.h"

void Ad_do_type_init(Ad_do_type& _ctx) {
   Util_edge_type_init(_ctx.inst_10452);
   _ctx.out = 0x0 /* 0.000000 */;
   _ctx.rate = 0x0 /* 0.000000 */;
   _ctx.scale = 0x0 /* 0.000000 */;
   _ctx.state = 0;
   _ctx.target = 0x0 /* 0.000000 */;
}

fix16_t Ad_do(Ad_do_type& _ctx, fix16_t gate, fix16_t a, fix16_t d) {
   fix16_t a_rate = fix_div(0x10000 /* 1.000000 */, (0x28f /* 0.010000 */ + fix_mul(0x640000 /* 100.000000 */, a)));
   fix16_t d_rate = fix_div(0x10000 /* 1.000000 */, (0x28f /* 0.010000 */ + fix_mul(0x640000 /* 100.000000 */, d)));
   bool bgate = gate > 0x0 /* 0.000000 */;
   _ctx.out = fix_mul(0x106 /* 0.004000 */, fix_mul(((- _ctx.out) + _ctx.target), _ctx.rate)) + _ctx.out;
   if (_ctx.state == 0) {
      if (Util_edge(_ctx.inst_10452, bgate)) {
         _ctx.state = 1;
         _ctx.scale = fix_mul(0x3333 /* 0.200000 */, gate);
      }
      _ctx.rate = d_rate;
      _ctx.target = 0x0 /* 0.000000 */;
   }
   if (_ctx.state == 1) {
      if ((bgate == false) || _ctx.out > 0x4000000 /* 1024.000000 */) {
         _ctx.state = 0;
      }
      _ctx.rate = a_rate;
      _ctx.target = 0x4cccccc /* 1228.800000 */;
   }
   return fix_mul(fix_clip(fix_mul(0x40 /* 0.000977 */, _ctx.out), 0x0 /* 0.000000 */, 0x10000 /* 1.000000 */), _ctx.scale);
}

