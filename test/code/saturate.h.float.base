/* This code was generated by the Vult compiler v1-dev https://github.com/modlfo/vult */
#ifndef SATURATE_H
#define SATURATE_H

#include "vultin.h"
#include "saturate.tables.h"

static_inline float Saturate_tanh_table_raw_c0(int32_t index) {
   return Saturate_tanh_table_c0[static_cast<uint32_t>(index)];
}

static_inline float Saturate_tanh_table_raw_c1(int32_t index) {
   return Saturate_tanh_table_c1[static_cast<uint32_t>(index)];
}

static_inline float Saturate_tanh_table_raw_c2(int32_t index) {
   return Saturate_tanh_table_c2[static_cast<uint32_t>(index)];
}

static_inline float Saturate_tanh_table(float x) {
   int32_t index = int_clip(float_to_int(((x - -24.0f) * 5.0f)), 0, 240);
   return (Saturate_tanh_table_c0[static_cast<uint32_t>(index)] + (x * (Saturate_tanh_table_c1[static_cast<uint32_t>(index)] + (Saturate_tanh_table_c2[static_cast<uint32_t>(index)] * x))));
}

static_inline float Saturate_process(float x) {
   return Saturate_tanh_table(x);
}

static_inline void Saturate_noteOn(int32_t note, int32_t velocity, int32_t channel) {
}

static_inline void Saturate_noteOff(int32_t note, int32_t channel) {
}

static_inline void Saturate_controlChange(int32_t control, int32_t value, int32_t channel) {
}

static_inline void Saturate_default() {
}


#endif // SATURATE_H
