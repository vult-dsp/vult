/* This code was generated by the Vult compiler v1-dev https://github.com/vult-dsp/vult */

#include "lfo.h"

void Lfo_process_type_init(Lfo_process_type& _ctx) {
   Util_change_type_init(_ctx.inst_1b0d6);
   Util_edge_type_init(_ctx.inst_204d6);
   Lfo_soft_type_init(_ctx.inst_337d6);
   _ctx.phase = 0.0f;
   _ctx.rate = 0.0f;
}

float Lfo_process(Lfo_process_type& _ctx, float cv, float shape, float reset) {
   if (Util_change(_ctx.inst_1b0d6, cv)) {
      _ctx.rate = Util_cvToRate(-0.3f + cv);
   }
   _ctx.phase = _ctx.phase + _ctx.rate;
   if (_ctx.phase > 2.0f) {
      _ctx.phase = -2.0f + _ctx.phase;
   }
   else {
      _ctx.phase = _ctx.phase;
   }
   bool breset = reset > 0.0f;
   if (Util_edge(_ctx.inst_204d6, breset)) {
      _ctx.phase = 0.0f;
   }
   float tmp = -1.0f + _ctx.phase;
   float o = 0.0f;
   if (shape < 1.0f) {
      o = tmp;
   }
   else {
      if (shape < 2.0f) {
         o = -1.0f + 2.0f * fabsf(tmp);
      }
      else {
         if (tmp > 0.0f) {
            o = 1.0f;
         }
         else {
            o = 0.0f;
         }
      }
   }
   return Lfo_soft(_ctx.inst_337d6, o);
}

