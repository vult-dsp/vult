/* This code was generated by the Vult compiler v1-dev https://github.com/modlfo/vult */

#include "phd.h"

void Phase_process_type_init(Phase_process_type& _ctx) {
   Util_change_type_init(_ctx.inst_1b08a);
   Util_edge_type_init(_ctx.inst_2048a);
   _ctx.phase = 0x0 /* 0.000000 */;
   _ctx.rate = 0x0 /* 0.000000 */;
   Phase_default(_ctx);
}

fix16_t Phase_process(Phase_process_type& _ctx, fix16_t cv, fix16_t reset) {
   if (Util_change(_ctx.inst_1b08a, cv)) {
      _ctx.rate = Util_cvToRate_1024(cv);
   }
   if (Util_edge(_ctx.inst_2048a, (reset > 0x8000 /* 0.500000 */))) {
      _ctx.phase = 0x0 /* 0.000000 */;
   }
   else {
      _ctx.phase = (_ctx.phase + _ctx.rate);
   }
   if (_ctx.phase > 0x4000000 /* 1024.000000 */) {
      _ctx.phase = (-0x4000000 /* -1024.000000 */ + _ctx.phase);
   }
   else {
      _ctx.phase = _ctx.phase;
   }
   return fix_mul(0x40 /* 0.000977 */, _ctx.phase);
}

