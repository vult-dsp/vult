
function ifExpressionValue(cond,then_,else_) if cond then return then_ else return else_ end end
function ifExpression(cond,then_,else_) if cond then return then_() else return else_() end end
function eps()              return 1e-18 end
function pi()               return 3.1415926535897932384 end
function random()           return math.random() end
function irandom()          return math.floor(math.random() * 4294967296) end
function clip(x,low,high)   if x > high then return high else if x < low then return low else return x end end end
function real(x)            return x end
function int(x)             local int_part,_ = math.modf(x) return int_part end
function sin(x)             return math.sin(x) end
function cos(x)             return math.cos(x) end
function abs(x)             return math.abs(x) end
function exp(x)             return math.exp(x) end
function floor(x)           return math.floor(x) end
function tan(x)             return math.tan(x) end
function tanh(x)            return math.tanh(x) end
function sqrt(x)            return x end
function set(a, i, v)       a[i+1]=v end
function get(a, i)          return a[i+1] end
function intDiv(a, b)       return math.floor(a / b) end

local Wav_file_ext_wave_chan_0 = {0.00766, 0.0512085, 0.0964051, 0.1441956, 0.1943665, 0.2468262, 0.3007813, 0.3551941, 0.4085389, 0.459076, 0.5039673, 0.5365296, 0.5629578, 0.631897, 0.6867676, 0.7349549, 0.7808228, 0.8247071, 0.8654175, 0.9016419, 0.9324036, 0.9572754, 0.9762269, 0.9894105, 0.9972535, 0.9999695, 0.9980469, 0.9916993, 0.9813538, 0.9674683, 0.95047, 0.9308167, 0.908844, 0.8847657, 0.858368, 0.8302918, 0.8013001, 0.7709961, 0.7388611, 0.7048646, 0.6686707, 0.6298829, 0.5883179, 0.5437317, 0.4961548, 0.4455262, 0.3920594, 0.335907, 0.2772828, 0.2167054, 0.1546021, 0.0916749, 0.0287171, -0.0335083, -0.0942687, -0.1526794, -0.2080078, -0.2591857, -0.3051452, -0.3439636, -0.3676452, -0.4059753, -0.4544372, -0.4925537, -0.5259704, -0.5571289, -0.5862731, -0.6127319, -0.6359558, -0.6557006, -0.6719055, -0.6846313, -0.6941528, -0.700592, -0.7040405, -0.7045593, -0.7022399, -0.6971435, -0.689392, -0.6791687, -0.666687, -0.6520385, -0.6354675, -0.6171264, -0.5971679, -0.5757446, -0.5529479, -0.5289001, -0.5037536, -0.477539, -0.4504394, -0.4225769, -0.3940124, -0.3648986, -0.3353576, -0.3055114, -0.2754211, -0.2452392, -0.2151184, -0.1850891, -0.1553039, -0.1257934, -0.0967407, -0.0681457, -0.0401916, -0.0129089, 0.0136109, 0.0393677, 0.0641785, 0.0881043, 0.1109925, 0.132782, 0.1535035, 0.1730347, 0.1913758, 0.2084351, 0.2242432, 0.2387085, 0.251709, 0.2632752, 0.2731629, 0.2807313, 0.2857972, 0.2965394, 0.3049927, 0.3119813, 0.3182679, 0.3240967, 0.3295289, 0.3343201, 0.3384705, 0.3419495, 0.3448487, 0.347107, 0.348877, 0.3500367, 0.3507081, 0.3508606, 0.3505555, 0.3497925, 0.3485718, 0.3468934, 0.3448792, 0.3424988, 0.3397828, 0.3367615, 0.3334961, 0.3299561, 0.3261719, 0.3220826, 0.3178711, 0.3133545, 0.3086548, 0.303711, 0.298523, 0.2931519, 0.2875672, 0.2817078, 0.2756348, 0.2693482, 0.2627564, 0.255951, 0.2488709, 0.2414856, 0.2337952, 0.2258606, 0.2175599, 0.2089539, 0.2000428, 0.1907959, 0.1811829, 0.1712647, 0.1609803, 0.1503602, 0.1394043, 0.1281434, 0.1165162, 0.1046143, 0.0924073, 0.0799256, 0.0671692, 0.0542298, 0.0410157, 0.0276185, 0.0140381, 0.0003357, -0.0134887, -0.0274047, -0.0413818, -0.0553894, -0.069458, -0.0834655, -0.0974731, -0.1114196, -0.1252136, -0.138916, -0.1524963, -0.165924, -0.1791381, -0.1921997, -0.2050476, -0.2176208, -0.2299499, -0.2420654, -0.2539062, -0.2654724, -0.2767333, -0.2876892, -0.2983093, -0.3086547, -0.318634, -0.3283081, -0.3376464, -0.3465576, -0.3551025, -0.3632812, -0.3710327, -0.3783264, -0.3852233, -0.3916015, -0.3974914, -0.4028625, -0.4077148, -0.4119873, -0.4157104, -0.4187622, -0.4212036, -0.4230041, -0.4241027, -0.4244995, -0.4241943, -0.4231872, -0.4214477, -0.4189453, -0.4157104, -0.4117431, -0.4070739, -0.4016418, -0.3955688, -0.3888244, -0.3813781, -0.373352, -0.3647155, -0.3555297, -0.3457946, -0.3356323, -0.3250122, -0.3140563, -0.3027648, -0.2911682, -0.2793884, -0.2674865, -0.2554626, -0.2434692, -0.2315063, -0.2196044, -0.2079162, -0.1964416, -0.1852416, -0.1743469, -0.1638183, -0.1536865, -0.1439819, -0.1346435, -0.1257324, -0.1171875, -0.1089172, -0.1008911, -0.0928955, -0.0847473, -0.0756835, -0.0654296, -0.0612792, -0.0564575, -0.0515441, -0.0471496, -0.0433349, -0.040039, -0.0369567, -0.0339965, -0.0309448, -0.0276794, -0.0239868, -0.0198669, -0.0150451, -0.0094299, -0.0028686, 0.0047303, 0.0136414, 0.0239563, 0.0357056, 0.0490113, 0.0640259, 0.0808411, 0.0994874, 0.1201783, 0.1430665, 0.1684876, 0.1993409, 0.2352601, 0.268219, 0.2957154, 0.3212586, 0.3432618, 0.3611756, 0.4031678, 0.4416504, 0.4794312, 0.5186158, 0.5592042, 0.6000977, 0.6404419, 0.6791382, 0.7155152, 0.7489014, 0.7788392, 0.8049012, 0.8268128, 0.8443604, 0.8574219, 0.8660279, 0.8702088, 0.8703003, 0.8664551, 0.8591614, 0.8487855, 0.8357239, 0.8204041, 0.8031922, 0.7844239, 0.7643433, 0.7431946, 0.7211304, 0.6982728, 0.6745606, 0.6499634, 0.6244813, 0.5978699, 0.5700074, 0.54068, 0.5096436, 0.4766236, 0.4414673, 0.4040223, 0.3640442, 0.3215333, 0.2764588, 0.2288819, 0.1789551, 0.1269532, 0.0732422, 0.0182496, -0.0375061, -0.0935058, -0.1491394, -0.2037658, -0.2566833, -0.3072204, -0.3546142, -0.3981933, -0.4369201, -0.4692382, -0.4890136, -0.5166625, -0.5590515, -0.5911254, -0.6187438, -0.6445617, -0.6687927, -0.6909179, -0.7104797, -0.7270507, -0.7406311, -0.7512817, -0.7591857, -0.7644653, -0.7671813, -0.7674255, -0.7652587, -0.7606506, -0.7538452, -0.7449035, -0.7339477, -0.7212219, -0.7069091, -0.6910705, -0.6738586, -0.655426, -0.6358642, -0.6152648, -0.5936889, -0.571289, -0.5480957, -0.5242614, -0.4997558, -0.4747619, -0.4492797, -0.4234924, -0.3973693, -0.3710021, -0.3444824, -0.3179016, -0.2912597, -0.2646484, -0.2380981, -0.2116394, -0.1853332, -0.1593017, -0.1335144, -0.1080017, -0.0828247, -0.0580444, -0.0336914, -0.0097656, 0.0136414, 0.0365906, 0.0589905, 0.0807496, 0.1019898, 0.1225892, 0.1425477, 0.1618348, 0.180481, 0.1984253, 0.2156983, 0.2322388, 0.2480774, 0.2632447, 0.277649, 0.2914124, 0.3044129, 0.3167725, 0.3284302, 0.3394166, 0.3497315, 0.3594361, 0.3684998, 0.3769837, 0.3848877, 0.3921814, 0.3989563, 0.4051819, 0.4108582, 0.4160767, 0.4207764, 0.4250184, 0.4288025, 0.432129, 0.4349671, 0.4374085, 0.4393921, 0.4409485, 0.4420472, 0.442688, 0.4429017, 0.4426575, 0.4419556, 0.4407654, 0.439087, 0.4368897, 0.4342347, 0.4309998, 0.4272461, 0.4229737, 0.4181214, 0.4126893, 0.4067078, 0.400116, 0.3929749, 0.3852845, 0.3769837, 0.3681641, 0.3587342, 0.348816, 0.3383484, 0.3273926, 0.3159485, 0.3040162, 0.2917176, 0.2789612, 0.2658082, 0.2523499, 0.238556, 0.2245179, 0.2101441, 0.1955567, 0.1807557, 0.1657715, 0.1506348, 0.1353455, 0.1199341, 0.1044312, 0.0888978, 0.0732422, 0.0575867, 0.0419007, 0.0262146, 0.0105591, -0.0050354, -0.0206298, -0.0361328, -0.0516052, -0.066925, -0.0821533, -0.0973205, -0.1122741, -0.1271667, -0.1419067, -0.1564636, -0.1708374, -0.1850891, -0.1991271, -0.2129821, -0.226593, -0.2400207, -0.2532043, -0.2661132, -0.2787475, -0.2911071, -0.3031005, -0.3148193, -0.3261108, -0.3370666, -0.3475646, -0.3576049, -0.3671264, -0.3761596, -0.384613, -0.3924865, -0.3997192, -0.406372, -0.4122619, -0.4175109, -0.421997, -0.4257507, -0.4287109, -0.4309387, -0.4324035, -0.4330444, -0.4329528, -0.4321289, -0.4305114, -0.4282531, -0.4252319, -0.4216003, -0.4173583, -0.4125671, -0.4072875, -0.4015502, -0.3954467, -0.389038, -0.3823852, -0.3755798, -0.3687438, -0.3618774, -0.3551025, -0.3485717, -0.3423156, -0.3365173, -0.3312072, -0.3266296, -0.323059, -0.3208618, -0.3234863, -0.3296508, -0.3323669, -0.332611, -0.333496, -0.3350219, -0.3375854, -0.3410034, -0.3450927, -0.3496398, -0.3544006, -0.3590698, -0.3634948, -0.3673706, -0.3706054, -0.3729248, -0.374237, -0.3743286, -0.3730468, -0.3703002, -0.3660278, -0.3601379, -0.3525695, -0.3433227, -0.3323059, -0.3195495, -0.3050231, -0.2887268, -0.2706298, -0.2506103, -0.2286682, -0.2046508, -0.1783447, -0.1495361, -0.1177368, -0.0804443, -0.0369567}
function Wav_file_ext_wave_samples()
   return 600
end

function Wav_file_ext_wave(channel, index)
   if (channel == 0) then
      return Wav_file_ext_wave_chan_0[(index % 600) + 1]
   end
   return 0.
end

function Wav_file_index_type_alloc()
   local _ctx = Wav_file_index_type_alloc();
   _ctx.i = 0
   return _ctx
end

function Wav_file_osc_wave_type_alloc()
   local _ctx = Wav_file_osc_wave_type_alloc();
   _ctx.inst_1e19a = Wav_file_index_type_alloc()
   return _ctx
end

function Wav_file_process_type_alloc()
   local _ctx = Wav_file_process_type_alloc();
   _ctx.inst_19a53 = Wav_file_osc_wave_type_alloc()
   return _ctx
end

function Wav_file_noteOn_type_alloc(_ctx)
   return Wav_file_process_type_alloc()
end

function Wav_file_noteOff_type_alloc(_ctx)
   return Wav_file_process_type_alloc()
end

function Wav_file_controlChange_type_alloc(_ctx)
   return Wav_file_process_type_alloc()
end

function Wav_file_default_type_alloc(_ctx)
   return Wav_file_process_type_alloc()
end

function Wav_file_index(_ctx)
   _ctx.i = ((1 + _ctx.i) % Wav_file_ext_wave_samples())
   return _ctx.i
end

function Wav_file_osc_wave(_ctx, cv)
   return Wav_file_ext_wave(0, Wav_file_index(_ctx.inst_1e19a))
end

function Wav_file_process(_ctx, cv)
   return Wav_file_osc_wave(_ctx.inst_19a53, cv)
end

function Wav_file_noteOn(_ctx, note, velocity, channel)
end

function Wav_file_noteOff(_ctx, note, channel)
end

function Wav_file_controlChange(_ctx, control, value, channel)
end

function Wav_file_default(_ctx)
end

