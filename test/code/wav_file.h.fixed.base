/* This code was generated by the Vult compiler v1-dev https://github.com/modlfo/vult */
#ifndef WAV_FILE_H
#define WAV_FILE_H

#include "vultin.h"
#include "wav_file.tables.h"

typedef struct Wav_file_index_type {
   int32_t i;
} Wav_file_index_type;

typedef struct Wav_file_osc_wave_type {
   Wav_file_index_type inst_1e19a;
} Wav_file_osc_wave_type;

typedef struct Wav_file_process_type {
   Wav_file_osc_wave_type inst_19a53;
} Wav_file_process_type;

typedef struct Wav_file_process_type Wav_file_noteOn_type;

typedef struct Wav_file_process_type Wav_file_noteOff_type;

typedef struct Wav_file_process_type Wav_file_controlChange_type;

typedef struct Wav_file_process_type Wav_file_default_type;

static_inline int32_t Wav_file_ext_wave_samples() {
   return 600;
}

static_inline fix16_t Wav_file_ext_wave(int32_t channel, int32_t index) {
   if (channel == 0) {
      return Wav_file_ext_wave_chan_0[static_cast<uint32_t>(index % 600)];
   }
   return 0.0f;
}

static_inline void Wav_file_index_type_init(Wav_file_index_type& _ctx) {
   _ctx.i = 0;
}

static_inline void Wav_file_osc_wave_type_init(Wav_file_osc_wave_type& _ctx) {
   Wav_file_index_type_init(_ctx.inst_1e19a);
}

static_inline void Wav_file_process_type_init(Wav_file_process_type& _ctx) {
   Wav_file_osc_wave_type_init(_ctx.inst_19a53);
}

static_inline void Wav_file_noteOn_type_init(Wav_file_noteOn_type& _ctx) {
   Wav_file_process_type_init(_ctx);
}

static_inline void Wav_file_noteOff_type_init(Wav_file_noteOff_type& _ctx) {
   Wav_file_process_type_init(_ctx);
}

static_inline void Wav_file_controlChange_type_init(Wav_file_controlChange_type& _ctx) {
   Wav_file_process_type_init(_ctx);
}

static_inline void Wav_file_default_type_init(Wav_file_default_type& _ctx) {
   Wav_file_process_type_init(_ctx);
}

static_inline int32_t Wav_file_index(Wav_file_index_type& _ctx) {
   _ctx.i = (1 + _ctx.i) % Wav_file_ext_wave_samples();
   return _ctx.i;
}

static_inline fix16_t Wav_file_osc_wave(Wav_file_osc_wave_type& _ctx, fix16_t cv) {
   return Wav_file_ext_wave(0, Wav_file_index(_ctx.inst_1e19a));
}

static_inline fix16_t Wav_file_process(Wav_file_process_type& _ctx, fix16_t cv) {
   return Wav_file_osc_wave(_ctx.inst_19a53, cv);
}

static_inline void Wav_file_noteOn(Wav_file_process_type& _ctx, int32_t note, int32_t velocity, int32_t channel) {
}

static_inline void Wav_file_noteOff(Wav_file_process_type& _ctx, int32_t note, int32_t channel) {
}

static_inline void Wav_file_controlChange(Wav_file_process_type& _ctx, int32_t control, int32_t value, int32_t channel) {
}

static_inline void Wav_file_default(Wav_file_process_type& _ctx) {
}


#endif // WAV_FILE_H
