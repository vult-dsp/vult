/* This code was generated by the Vult compiler v1-dev https://github.com/vult-dsp/vult */
#ifndef BITCRUSH_H
#define BITCRUSH_H

#include "vultin.h"
#include "bitcrush.tables.h"

static_inline float Bitcrush_factor_raw_c0(int32_t index) {
   return Bitcrush_factor_c0[static_cast<uint32_t>(index)];
}

static_inline float Bitcrush_factor_raw_c1(int32_t index) {
   return Bitcrush_factor_c1[static_cast<uint32_t>(index)];
}

static_inline float Bitcrush_factor_raw_c2(int32_t index) {
   return Bitcrush_factor_c2[static_cast<uint32_t>(index)];
}

static_inline float Bitcrush_factor(float cv) {
   int32_t index = int_clip(float_to_int(cv * 127.0f), 0, 127);
   return Bitcrush_factor_c0[static_cast<uint32_t>(index)] + cv * (Bitcrush_factor_c1[static_cast<uint32_t>(index)] + Bitcrush_factor_c2[static_cast<uint32_t>(index)] * cv);
}

float Bitcrush_process(float i, float cv);

static_inline void Bitcrush_noteOn(int32_t note, int32_t velocity, int32_t channel) {
}

static_inline void Bitcrush_noteOff(int32_t note, int32_t channel) {
}

static_inline void Bitcrush_controlChange(int32_t control, int32_t value, int32_t channel) {
}

static_inline void Bitcrush_default() {
}


#endif // BITCRUSH_H
