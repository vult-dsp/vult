
function ifExpressionValue(cond,then_,else_) if cond then return then_ else return else_ end end
function ifExpression(cond,then_,else_) if cond then return then_() else return else_() end end
function eps()              return 1e-18 end
function pi()               return 3.1415926535897932384 end
function random()           return math.random() end
function irandom()          return math.floor(math.random() * 4294967296) end
function clip(x,low,high)   if x > high then return high else if x < low then return low else return x end end end
function real(x)            return x end
function int(x)             local int_part,_ = math.modf(x) return int_part end
function sin(x)             return math.sin(x) end
function cos(x)             return math.cos(x) end
function abs(x)             return math.abs(x) end
function exp(x)             return math.exp(x) end
function floor(x)           return math.floor(x) end
function tan(x)             return math.tan(x) end
function tanh(x)            return math.tanh(x) end
function sqrt(x)            return x end
function set(a, i, v)       a[i+1]=v end
function get(a, i)          return a[i+1] end
function intDiv(a, b)       return math.floor(a / b) end

local Bitcrush_factor_c0 = {24.7875218, 24.7873664, 24.7867582, 24.7854209, 24.783098, 24.7795519, 24.7745634, 24.7679304, 24.759467, 24.7490033, 24.7363839, 24.7214679, 24.7041273, 24.6842473, 24.6617249, 24.6364687, 24.6083981, 24.5774428, 24.5435421, 24.5066447, 24.466708, 24.4236974, 24.3775862, 24.328355, 24.2759912, 24.2204889, 24.1618479, 24.1000739, 24.0351781, 23.9671764, 23.8960897, 23.8219429, 23.7447654, 23.6645899, 23.581453, 23.4953943, 23.4064567, 23.3146856, 23.2201289, 23.1228371, 23.0228627, 22.92026, 22.8150852, 22.7073961, 22.5972518, 22.4847126, 22.3698401, 22.2526967, 22.1333455, 22.0118507, 21.8882765, 21.7626881, 21.6351506, 21.5057297, 21.374491, 21.2415003, 21.1068232, 20.9705254, 20.8326722, 20.6933287, 20.5525599, 20.41043, 20.2670032, 20.1223427, 19.9765116, 19.8295721, 19.6815859, 19.532614, 19.3827165, 19.2319531, 19.0803824, 18.9280622, 18.7750495, 18.6214006, 18.4671707, 18.3124141, 18.1571843, 18.0015336, 17.8455136, 17.6891749, 17.532567, 17.3757384, 17.2187367, 17.0616084, 16.9043992, 16.7471535, 16.5899149, 16.4327259, 16.275628, 16.1186617, 15.9618665, 15.8052808, 15.6489422, 15.4928871, 15.3371511, 15.1817687, 15.0267734, 14.8721979, 14.7180736, 14.5644314, 14.411301, 14.2587112, 14.1066899, 13.955264, 13.8044598, 13.6543024, 13.5048162, 13.3560246, 13.2079502, 13.060615, 12.9140399, 12.7682451, 12.6232499, 12.479073, 12.3357322, 12.1932446, 12.0516265, 11.9108935, 11.7710606, 11.6321419, 11.494151, 11.3571007, 11.2210031, 11.0858699, 10.9517118, 10.8185393, 10.686362, 10.5551889}
local Bitcrush_factor_c1 = {-74.359191, -74.3193457, -74.2414442, -74.1272708, -73.978548, -73.7969376, -73.5840431, -73.3414114, -73.0705345, -72.772851, -72.4497484, -72.1025641, -71.732587, -71.3410596, -70.9291788, -70.4980977, -70.0489268, -69.5827355, -69.1005535, -68.6033717, -68.0921439, -67.5677875, -67.0311852, -66.4831857, -65.924605, -65.3562274, -64.7788065, -64.1930662, -63.5997019, -62.9993812, -62.3927446, -61.780407, -61.162958, -60.540963, -59.914964, -59.2854803, -58.6530092, -58.0180269, -57.3809891, -56.7423319, -56.102472, -55.461808, -54.8207204, -54.1795727, -53.5387117, -52.8984681, -52.2591572, -51.6210793, -50.9845205, -50.3497528, -49.7170346, -49.0866118, -48.4587175, -47.8335728, -47.2113873, -46.5923594, -45.9766766, -45.3645162, -44.7560453, -44.1514215, -43.5507931, -42.9542994, -42.3620712, -41.7742309, -41.1908931, -40.6121645, -40.0381447, -39.4689261, -38.9045942, -38.3452282, -37.7909007, -37.2416785, -36.6976226, -36.1587882, -35.6252255, -35.0969793, -34.5740897, -34.0565919, -33.5445168, -33.0378908, -32.5367361, -32.0410713, -31.5509109, -31.0662659, -30.5871437, -30.1135485, -29.6454815, -29.1829405, -28.7259208, -28.2744148, -27.8284122, -27.3879004, -26.9528643, -26.5232867, -26.099148, -25.6804268, -25.2670997, -24.8591415, -24.4565253, -24.0592224, -23.6672028, -23.2804349, -22.8988857, -22.522521, -22.1513053, -21.7852022, -21.4241738, -21.0681815, -20.7171858, -20.3711462, -20.0300214, -19.6937694, -19.3623475, -19.0357124, -18.7138202, -18.3966263, -18.0840858, -17.7761534, -17.4727833, -17.1739294, -16.8795451, -16.5895839, -16.3039987, -16.0227424, -15.7457678, -15.4730273, -15.2044734, -14.9400585}
local Bitcrush_factor_c2 = {110.2455845, 107.6917482, 105.1970716, 102.7601841, 100.379747, 98.0544526, 95.7830237, 93.5642123, 91.3967997, 89.2795951, 87.2114355, 85.1911848, 83.2177331, 81.2899964, 79.4069157, 77.5674564, 75.7706083, 74.015384, 72.3008195, 70.6259728, 68.9899239, 67.391774, 65.8306453, 64.30568, 62.8160405, 61.3609085, 59.9394846, 58.550988, 57.1946558, 55.869743, 54.5755218, 53.3112812, 52.0763267, 50.8699799, 49.6915781, 48.5404739, 47.4160351, 46.3176438, 45.2446967, 44.1966045, 43.1727912, 42.1726946, 41.1957652, 40.2414663, 39.3092737, 38.3986754, 37.509171, 36.640272, 35.791501, 34.9623918, 34.1524889, 33.3613473, 32.5885326, 31.83362, 31.096195, 30.3758524, 29.6721966, 28.9848409, 28.3134078, 27.6575284, 27.0168424, 26.3909979, 25.7796511, 25.1824662, 24.599115, 24.0292771, 23.4726395, 22.9288964, 22.3977491, 21.8789058, 21.3720815, 20.8769977, 20.3933826, 19.9209704, 19.4595016, 19.0087227, 18.5683862, 18.13825, 17.7180778, 17.307639, 16.906708, 16.5150645, 16.1324935, 15.7587847, 15.3937328, 15.0371374, 14.6888025, 14.3485367, 14.0161532, 13.6914694, 13.3743068, 13.0644914, 12.7618527, 12.4662247, 12.177445, 11.8953548, 11.6197992, 11.3506268, 11.0876898, 10.8308438, 10.5799475, 10.3348633, 10.0954565, 9.8615955, 9.6331519, 9.4100001, 9.1920177, 8.9790849, 8.7710846, 8.5679026, 8.3694274, 8.1755498, 7.9861634, 7.8011641, 7.6204504, 7.4439228, 7.2714845, 7.1030408, 6.938499, 6.7777689, 6.620762, 6.4673922, 6.3175752, 6.1712288, 6.0282724, 5.8886276, 5.7522177, 5.6189677}
function Bitcrush_factor_raw_c0(index)
   return Bitcrush_factor_c0[index + 1]
end

function Bitcrush_factor_raw_c1(index)
   return Bitcrush_factor_c1[index + 1]
end

function Bitcrush_factor_raw_c2(index)
   return Bitcrush_factor_c2[index + 1]
end

function Bitcrush_factor(cv)
   local index = int_clip(float_to_int((cv * 127.)), 0, 127)
   return (Bitcrush_factor_c0[index + 1] + (cv * (Bitcrush_factor_c1[index + 1] + (Bitcrush_factor_c2[index + 1] * cv))))
end

function Bitcrush_process(i, cv)
   local out = i
   if (cv == 0.) then
      out = i
   else
      do
         local b = Bitcrush_factor(cv)
         local x = int((b * i))
         out = (real(x) / b)
      end
   end
   return out
end

function Bitcrush_noteOn(note, velocity, channel)
end

function Bitcrush_noteOff(note, channel)
end

function Bitcrush_controlChange(control, value, channel)
end

function Bitcrush_default()
end

