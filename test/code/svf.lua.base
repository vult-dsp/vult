
function ifExpressionValue(cond,then_,else_) if cond then return then_ else return else_ end end
function ifExpression(cond,then_,else_) if cond then return then_() else return else_() end end
function eps()              return 1e-18 end
function pi()               return 3.1415926535897932384 end
function random()           return math.random() end
function irandom()          return math.floor(math.random() * 4294967296) end
function clip(x,low,high)   if x > high then return high else if x < low then return low else return x end end end
function real(x)            return x end
function int(x)             local int_part,_ = math.modf(x) return int_part end
function sin(x)             return math.sin(x) end
function cos(x)             return math.cos(x) end
function abs(x)             return math.abs(x) end
function exp(x)             return math.exp(x) end
function floor(x)           return math.floor(x) end
function tan(x)             return math.tan(x) end
function tanh(x)            return math.tanh(x) end
function sqrt(x)            return x end
function set(a, i, v)       a[i+1]=v end
function get(a, i)          return a[i+1] end

function Util_edge_type_init(_ctx)
   _ctx.pre = false
end

function Util_change_type_init(_ctx)
   _ctx.pre_x = 0.0
end

function Util_dcblock_type_init(_ctx)
   _ctx.x1 = 0.0
   _ctx.y1 = 0.0
end

function Util_smooth_type_init(_ctx)
   _ctx.x = 0.0
end

function Util_average2_type_init(_ctx)
   _ctx.x0 = 0.0
end

function Svf_process_type_init(_ctx)
   _ctx.g = 0.0
   Util_change_type_init(_ctx.inst_1b0a2)
   Util_change_type_init(_ctx.inst_2b0a2)
   _ctx.inv_den = 0.0
   _ctx.r = 0.0
   _ctx.z1 = 0.0
   _ctx.z2 = 0.0
end

function Svf_noteOn_type_init(_ctx)
   Svf_process_type_init(_ctx)
end

function Svf_noteOff_type_init(_ctx)
   Svf_process_type_init(_ctx)
end

function Svf_controlChange_type_init(_ctx)
   Svf_process_type_init(_ctx)
end

function Svf_default_type_init(_ctx)
   Svf_process_type_init(_ctx)
end

function Util_edge(_ctx, x)
   local ret = (x and (_ctx.pre == false))
   _ctx.pre = x
   return ret
end

function Util_change(_ctx, x)
   local v = (_ctx.pre_x ~= x)
   _ctx.pre_x = x
   return v
end

function Util_map(x, x0, x1, y0, y1)
   return (y0 + (((x + (-x0)) * (y1 + (-y0))) / (x1 + (-x0))))
end

function Util_dcblock(_ctx, x0)
   local y0 = (x0 + ((-_ctx.x1) + (0.995 * _ctx.y1)))
   _ctx.x1 = x0
   _ctx.y1 = y0
   return y0
end

function Util_smooth(_ctx, input)
   _ctx.x = ((0.005 * (input + (-_ctx.x))) + _ctx.x)
   return _ctx.x
end

function Util_average2(_ctx, x1)
   local result = (0.5 * (x1 + _ctx.x0))
   _ctx.x0 = x1
   return result
end

function Util_cubic_clipper(x)
   if (x <= -0.666666666667) then
      return -0.666666666667
   else
      if (x >= 0.666666666667) then
         return 0.666666666667
      else
         return (x + (-0.333333333333 * (x * (x * x))))
      end
   end
end

local Util_pitchToRate_1024_c0 = {0.189841680037, 0.191325897587, 0.198688508148, 0.219424569862, 0.265677130707, 0.356437785473, 0.520650695732, 0.801559659982, 1.2627580175, 1.99656209516, 3.13554391444, 4.86834558389, 7.46127943009, 11.2877250287, 16.8680070773, 24.923329288, 36.4485184455, 52.8098902877, 75.8766038736, 108.196579288, 153.231618453, 215.671056451, 301.84942842, 420.301717762, 582.500345916, 803.831941852, 1104.89009292, 1513.18403172, 2065.39425205, 2810.34657529, 3812.92906922, 5159.24517275}
local Util_pitchToRate_1024_c1 = {0.010913303747, 0.0101757584611, 0.00833370067549, 0.00486693804823, -0.000939454906457, -0.0100609504679, -0.0238203680246, -0.0440021065342, -0.0730021827872, -0.114024943041, -0.171340538721, -0.250621419484, -0.359381469107, -0.507548338434, -0.708208460377, -0.978575736503, -1.34124969639, -1.82584799015, -2.47112258679, -3.3277005614, -4.46163084073, -5.95897027439, -7.93170915013, -10.5254219292, -13.9291388503, -18.3880749324, -24.2200334821, -31.8365325797, -41.7699993718, -54.7087564601, -71.5420103962, -93.4176738489}
local Util_pitchToRate_1024_c2 = {0.000355553647318, 0.000447161637288, 0.000562372320945, 0.00070726690528, 0.000889493413302, 0.00111867037239, 0.00140689451248, 0.00176937927213, 0.00222525781489, 0.00279859294203, 0.00351964720796, 0.00442648027959, 0.00556695785342, 0.00700127816781, 0.00880514946829, 0.0110737861431, 0.0139269344587, 0.0175151931697, 0.0220279626275, 0.027703441967, 0.0348412020576, 0.0438179978596, 0.0551076548178, 0.0693060789598, 0.0871627108188, 0.109620083423, 0.137863572355, 0.173383963859, 0.218056143549, 0.274238059167, 0.344895180991, 0.433757029322}
function Util_pitchToRate_1024_raw_c0(index)
   return Util_pitchToRate_1024_c0[index]
end

function Util_pitchToRate_1024_raw_c1(index)
   return Util_pitchToRate_1024_c1[index]
end

function Util_pitchToRate_1024_raw_c2(index)
   return Util_pitchToRate_1024_c2[index]
end

function Util_pitchToRate_1024(pitch)
   local index = int_clip(float_to_int((pitch * 0.244094488189)), 0, 31)
   return (Util_pitchToRate_1024_c0[index] + (pitch * (Util_pitchToRate_1024_c1[index] + (Util_pitchToRate_1024_c2[index] * pitch))))
end

local Util_pitchToRate_c0 = {0.000185392265661, 0.000186841696863, 0.000194031746239, 0.000214281806506, 0.000259450322956, 0.000348083774875, 0.000508447945051, 0.000782773105451, 0.00123316212646, 0.00194976767106, 0.00306205460394, 0.00475424373427, 0.00728640569345, 0.0110231689734, 0.0164726631615, 0.0243391887578, 0.0355942562944, 0.051572158484, 0.0740982459703, 0.105660721961, 0.149640252396, 0.210616266065, 0.294774832442, 0.410450896252, 0.568847994058, 0.784992130715, 1.07899423137, 1.47771878098, 2.01698657427, 2.74447907743, 3.72356354416, 5.03832536402}
local Util_pitchToRate_c1 = {1.06575231905e-05, 9.93726412215e-06, 8.13837956591e-06, 4.75286918772e-06, -9.17436432087e-07, -9.82514694128e-06, -2.32620781491e-05, -4.29708071623e-05, -7.12911941282e-05, -0.000111352483439, -0.000167324744845, -0.000244747479965, -0.000350958465925, -0.000495652674252, -0.000691609824587, -0.000955640367679, -0.00130981415663, -0.00178305467788, -0.00241320565116, -0.00324970757949, -0.0043570613679, -0.00581930690858, -0.00774580971693, -0.0102787323527, -0.0136026746585, -0.0179571044262, -0.0236523764474, -0.0310903638473, -0.0407910150115, -0.0534265199805, -0.0698652445276, -0.0912281971181}
local Util_pitchToRate_c2 = {3.47220358709e-07, 4.36681286414e-07, 5.49191719673e-07, 6.90690337187e-07, 8.68645911428e-07, 1.09245153554e-06, 1.37392042234e-06, 1.72790944544e-06, 2.17310333486e-06, 2.73300091995e-06, 3.43715547652e-06, 4.32273464804e-06, 5.43648227873e-06, 6.83718571075e-06, 8.59877877762e-06, 1.08142442804e-05, 1.36005219323e-05, 1.71046808298e-05, 2.15116822534e-05, 2.70541425459e-05, 3.40246113843e-05, 4.27910135348e-05, 5.3816069158e-05, 6.76817177342e-05, 8.5119834784e-05, 0.000107050862717, 0.000134632394878, 0.000169320277206, 0.000212945452684, 0.000267810604655, 0.000336811700187, 0.000423590848947}
function Util_pitchToRate_raw_c0(index)
   return Util_pitchToRate_c0[index]
end

function Util_pitchToRate_raw_c1(index)
   return Util_pitchToRate_c1[index]
end

function Util_pitchToRate_raw_c2(index)
   return Util_pitchToRate_c2[index]
end

function Util_pitchToRate(pitch)
   local index = int_clip(float_to_int((pitch * 0.244094488189)), 0, 31)
   return (Util_pitchToRate_c0[index] + (pitch * (Util_pitchToRate_c1[index] + (Util_pitchToRate_c2[index] * pitch))))
end

function Util_cvToPitch(cv)
   return (24.0 + (120.0 * cv))
end

local Util_cvToRate_1024_c0 = {0.759366720147, 0.76287682088, 0.779736591588, 0.825651541507, 0.924648365574, 1.11239844076, 1.44068747323, 1.98339245203, 2.84443411428, 4.16831053404, 6.15399353807, 9.07319497637, 13.2942977908, 19.3136142247, 27.7961017498, 39.6282633198, 55.9867164023, 78.426877799, 108.997432572, 150.387803507, 206.117798077, 280.781090515, 380.357332635, 512.611648457, 687.605267777, 918.347360286, 1221.62608022, 1619.06684253, 2138.47845209, 2815.56355702, 3696.08982219, 4838.64325098}
local Util_cvToRate_1024_c1 = {5.24558308188, 4.99894254851, 4.40308922353, 3.31911605161, 1.56449675017, -1.09925627575, -4.98222627999, -10.485864258, -18.1279556781, -28.5741020603, -42.6773652673, -61.5281299246, -86.5167460443, -119.412143465, -162.460391572, -218.508148307, -291.157146774, -384.957361393, -505.648347344, -660.460541998, -858.49116006, -1111.17283488, -1432.8575169, -1841.54353407, -2359.78039177, -3015.79414247, -3844.88635852, -4891.17235287, -6209.73987563, -7869.32876504, -9955.65580525, -12575.5383972}
local Util_cvToRate_1024_c2 = {20.1255918184, 24.4575723254, 29.7220001999, 36.1195822763, 43.8942270049, 53.342343486, 64.8241420966, 78.7773675459, 95.7339879363, 116.3404761, 141.382456439, 171.814656936, 208.797308247, 253.740377618, 308.357324021, 374.730423947, 455.390158406, 553.411687764, 672.532092537, 817.292849958, 993.212978243, 1206.99944971, 1466.80289476, 1782.52834546, 2166.21286591, 2632.48446646, 3199.11979805, 3887.72188884, 4724.54376176, 5741.48933359, 6977.329755, 8479.18156447}
function Util_cvToRate_1024_raw_c0(index)
   return Util_cvToRate_1024_c0[index]
end

function Util_cvToRate_1024_raw_c1(index)
   return Util_cvToRate_1024_c1[index]
end

function Util_cvToRate_1024_raw_c2(index)
   return Util_cvToRate_1024_c2[index]
end

function Util_cvToRate_1024(cv)
   local index = int_clip(float_to_int((cv * 34.4444444444)), 0, 31)
   return (Util_cvToRate_1024_c0[index] + (cv * (Util_cvToRate_1024_c1[index] + (Util_cvToRate_1024_c2[index] * cv))))
end

local Util_cvToRate_c0 = {0.000741569062643, 0.000741614411242, 0.00074180428862, 0.000742252395996, 0.000743088394805, 0.000744459465205, 0.000746531992835, 0.000749493393352, 0.000753554084963, 0.000758949619865, 0.000765942986251, 0.000774827093369, 0.000785927452954, 0.000799605071284, 0.000816259567075, 0.000836332531478, 0.000860311147543, 0.000888732087689, 0.000922185708978, 0.000961320567326, 0.00100684827322, 0.00105954871303, 0.00112027566151, 0.00118996281308, 0.00126963026092, 0.00136039145519, 0.00146346067361, 0.00158016103982, 0.00171193312735, 0.0018603441895, 0.00202709805811, 0.00221404575695, 0.00242319687851, 0.0026567317763, 0.00291701462783, 0.00320660742737, 0.00352828497145, 0.00388505090367, 0.00428015489049, 0.00471711100345, 0.00519971738906, 0.00573207731183, 0.00631862166239, 0.00696413302799, 0.00767377142899, 0.00845310183134, 0.00930812355338, 0.0102453016908, 0.011271600693, 0.0123945202323, 0.0136221335163, 0.0149631282028, 0.0164268500874, 0.0180233497453, 0.0197634323183, 0.0216587106514, 0.0237216619978, 0.0259656885204, 0.0284051818381, 0.031055591875, 0.0339335002913, 0.0370566987907, 0.0404442726148, 0.0441166895598, 0.048095894867, 0.0524054123619, 0.0570704522432, 0.0621180259395, 0.06757706849, 0.0734785689225, 0.0798557091332, 0.0867440118153, 0.0941814979977, 0.102208854809, 0.110869614103, 0.120210342645, 0.130280844553, 0.141134376811, 0.15282787863, 0.165422215543, 0.178982439159, 0.193578063547, 0.209283359285, 0.226177666277, 0.244345726513, 0.263878038001, 0.284871231181, 0.307428469244, 0.331659873779, 0.357682977388, 0.385623204872, 0.415614384781, 0.447799293199, 0.482330231738, 0.519369641849, 0.559090757699, 0.601678299927, 0.647329212872, 0.696253447843, 0.748674795297, 0.804831768934, 0.86497854482, 0.92938595894, 0.998342566702, 1.07215576822, 1.15115300335, 1.2356830206, 1.32611722471, 1.42285110725, 1.52630576559, 1.63692951553, 1.75519960309, 1.88162402163, 2.0167434406, 2.1611332526, 2.315405746, 2.48021241046, 2.65624638369, 2.8442450475, 3.04499278247, 3.25932389066, 3.48812569626, 3.73234183506, 3.99297574383, 4.27109436193, 4.56783205734, 4.88439479073, 5.22206453208}
local Util_cvToRate_c1 = {0.00513912879403, 0.00512626868888, 0.00509930490831, 0.00505686074037, 0.00499745713624, 0.00491950592209, 0.00482130258809, 0.00470101862945, 0.0045566934125, 0.0043862255376, 0.00418736366897, 0.00395769679957, 0.00369464391754, 0.00339544303886, 0.00305713956842, 0.00267657395002, 0.0022503685631, 0.00177491382196, 0.00124635343033, 0.000660568741827, 1.31621732394e-05, -0.000700560384205, -0.00148560821478, -0.00234732555176, -0.00329141253947, -0.00432394745384, -0.00545141025495, -0.00668070754868, -0.00801919903996, -0.00947472556377, -0.0110556387868, -0.0127708326749, -0.0146297768295, -0.0166425518023, -0.0188198865005, -0.0211731978044, -0.0237146325266, -0.0264571118439, -0.0294143783491, -0.0326010458687, -0.0360326522108, -0.0397257150057, -0.0436977908209, -0.0479675377383, -0.0525547815878, -0.0574805860502, -0.0627673268518, -0.0684387702789, -0.0745201562653, -0.0810382863093, -0.0880216164951, -0.095500355915, -0.103506570791, -0.112074294626, -0.121239644729, -0.131040945462, -0.141518858616, -0.152716521289, -0.164679691714, -0.177456903482, -0.19109962862, -0.205662450051, -0.221203243937, -0.237783372487, -0.255467887801, -0.274325747387, -0.294430041998, -0.315858236484, -0.338692424393, -0.363019597102, -0.388931928263, -0.416527074474, -0.445908493028, -0.477185777751, -0.510475013891, -0.545899153177, -0.583588410114, -0.623680680777, -0.666321985291, -0.711666935355, -0.759879228211, -0.811132168516, -0.865609219677, -0.923504586292, -0.985023829452, -1.05038451668, -1.11981690848, -1.19356468351, -1.27188570454, -1.35505282744, -1.4433547556, -1.53709694227, -1.63660254357, -1.74221342485, -1.8542912234, -1.97321847078, -2.09939977771, -2.23326308543, -2.37526098683, -2.52587212138, -2.68560264796, -2.85498779981, -3.0345935261, -3.225018225, -3.42689457329, -3.64089145768, -3.86771601362, -4.10811577749, -4.36288095812, -4.63284683471, -4.91889628778, -5.22196247035, -5.54303162729, -5.88314607095, -6.24340732152, -6.6249794213, -7.02909243212, -7.45704612652, -7.91021388256, -8.39004679399, -8.89807800751, -9.43592729912, -10.0053059032, -10.6080216074, -11.245984129, -11.9212107873, -12.6358324874, -13.3921000348}
local Util_cvToRate_c2 = {0.0182548011489, 0.0191665205038, 0.0201237748483, 0.0211288383859, 0.0221840989032, 0.0232920634422, 0.0244553642572, 0.025676765068, 0.0269591676256, 0.0283056186066, 0.029719316851, 0.0312036209617, 0.0327620572843, 0.0343983282843, 0.0361163213436, 0.0379201179956, 0.0398140036223, 0.0418024776352, 0.043890264165, 0.0460823232842, 0.0483838627922, 0.0508003505869, 0.0533375276553, 0.0560014217129, 0.0587983615239, 0.0617349919368, 0.0648182896709, 0.0680555798917, 0.0714545536132, 0.0750232859696, 0.0787702554011, 0.0827043637955, 0.086834957637, 0.0911718502116, 0.0957253449213, 0.100506259761, 0.105525953022, 0.110796350274, 0.116329972699, 0.122139966836, 0.12824013582, 0.134644972166, 0.141369692209, 0.148430272246, 0.155843486499, 0.16362694696, 0.171799145238, 0.180379496488, 0.189388385537, 0.198847215315, 0.208778457697, 0.219205706902, 0.230153735535, 0.24164855345, 0.253717469537, 0.266389156605, 0.279693719499, 0.293662766623, 0.308329485036, 0.323728719293, 0.339897054224, 0.356872901864, 0.374696592695, 0.393410471469, 0.413058997811, 0.433688851838, 0.455349045065, 0.478091036842, 0.501968856606, 0.527039232251, 0.553361724886, 0.580998870352, 0.610016327783, 0.640483035598, 0.67247137528, 0.706057343347, 0.741320731883, 0.778345318123, 0.817219063474, 0.858034322498, 0.900888062318, 0.945882092999, 0.993123309414, 1.04272394519, 1.09480183937, 1.14948071637, 1.20689047989, 1.26716752158, 1.330455045, 1.39690340592, 1.46667046948, 1.53992198525, 1.61683198101, 1.69758317619, 1.782367416, 1.87138612715, 1.96485079645, 2.06298347321, 2.16601729681, 2.27419705053, 2.38777974314, 2.5070352195, 2.63224680162, 2.76371196173, 2.90174302907, 3.04666793189, 3.19883097647, 3.35859366523, 3.52633555543, 3.70245516096, 3.88737089919, 4.08152208492, 4.28536997413, 4.49939885981, 4.7241172225, 4.96005893839, 5.20778454759, 5.46788258586, 5.74097098291, 6.02769853024, 6.32874642281, 6.64482987715, 6.97669983071, 7.32514472563, 7.69099238231, 8.07511196577, 8.47841605062, 8.90186278927}
function Util_cvToRate_raw_c0(index)
   return Util_cvToRate_c0[index]
end

function Util_cvToRate_raw_c1(index)
   return Util_cvToRate_c1[index]
end

function Util_cvToRate_raw_c2(index)
   return Util_cvToRate_c2[index]
end

function Util_cvToRate(cv)
   local index = int_clip(float_to_int((cv * 141.111111111)), 0, 127)
   return (Util_cvToRate_c0[index] + (cv * (Util_cvToRate_c1[index] + (Util_cvToRate_c2[index] * cv))))
end

function Util_pitchToCv(pitch)
   return (0.00833333333333 * (-24.0 + pitch))
end

local Util_cvToperiod_c0 = {674.246034776, 671.553837727, 662.76178188, 646.759521901, 623.799427712, 594.871801992, 561.298276875, 524.476942143, 485.731369226, 446.229382316, 406.94744034, 368.66377436, 331.968683025, 297.284155733, 264.887666444, 234.936856737, 207.493124397, 182.543015866, 160.016906779, 139.804831794, 121.769556579, 105.757116937, 91.6051155071, 79.149088394, 68.2272489259, 58.6838945702, 50.371733558, 43.1533549488, 36.902032908, 31.5020247862, 26.8484942477, 22.8471656705}
local Util_cvToperiod_c1 = {-4656.65631086, -4481.96057904, -4198.68613255, -3855.75154272, -3487.13945482, -3115.8588214, -2756.93031878, -2419.6251411, -2109.13475329, -1827.80833374, -1576.06296307, -1353.04709181, -1157.11886446, -986.186250154, -837.94466494, -710.039112868, -600.171233528, -506.166565653, -426.013462738, -357.88215123, -300.130189887, -251.29890433, -210.104104957, -175.423450149, -146.28211351, -121.837895062, -101.366536594, -84.2477263813, -69.9520817395, -58.0292593608, -48.0972479058, -39.8328333125}
local Util_cvToperiod_c2 = {14548.823162, 11715.3695219, 9433.74467508, 7596.47729664, 6117.02662156, 4925.70611715, 3966.40103985, 3193.92526365, 2571.89287904, 2071.00430825, 1667.66620793, 1342.8801524, 1081.3477512, 870.750049392, 701.167268045, 564.611553133, 454.650723814, 366.105297558, 294.804521096, 237.38991552, 191.157081924, 153.928316161, 123.950032495, 99.8101644891, 80.37165247, 64.7188846329, 52.1145689979, 41.9650047624, 33.792117225, 27.2109390435, 21.9114771264, 17.6441110354}
function Util_cvToperiod_raw_c0(index)
   return Util_cvToperiod_c0[index]
end

function Util_cvToperiod_raw_c1(index)
   return Util_cvToperiod_c1[index]
end

function Util_cvToperiod_raw_c2(index)
   return Util_cvToperiod_c2[index]
end

function Util_cvToperiod(cv)
   local index = int_clip(float_to_int((cv * 31.0)), 0, 31)
   return (Util_cvToperiod_c0[index] + (cv * (Util_cvToperiod_c1[index] + (Util_cvToperiod_c2[index] * cv))))
end

local Util_cvTokHz_c0 = {0.0327031956626, 0.0329157760149, 0.0339578485366, 0.0368566350801, 0.0432421259378, 0.0556159052222, 0.0777237842587, 0.115068916026, 0.175614259054, 0.270739336253, 0.416537388042, 0.635566803598, 0.959207146572, 1.43081778941, 2.109959525, 3.07802092665, 4.44569735701, 6.36290872359, 9.03192182114, 12.7246766192, 17.8056189134, 24.7617346776, 34.2419903781, 47.1090421017, 64.5069278521, 87.9495573939, 119.436233946, 161.602273483, 217.915147899, 292.929618558, 392.619239761, 524.806644821}
local Util_cvTokHz_c1 = {0.225719191888, 0.212293210117, 0.179169381636, 0.117604905736, 0.0157801819103, -0.142178074384, -0.377466272128, -0.718250312221, -1.20179695141, -1.87722845841, -2.80907738384, -4.08186733736, -5.80600813072, -8.12537311265, -11.2270275603, -15.3537053894, -20.8197945237, -28.0317982882, -37.5145028842, -49.9444141699, -66.1924493549, -87.3784044617, -114.940396419, -150.723337164, -197.091583804, -257.072283866, -334.537673833, -434.436788276, -563.089816652, -728.561857581, -941.137257915, -1213.92132821}
local Util_cvTokHz_c2 = {0.876337770753, 1.08828690662, 1.35149759677, 1.67836784855, 2.08429422425, 2.58839706504, 3.21442111597, 3.99185397416, 4.95731504247, 6.1562804124, 7.64522492346, 9.49428229626, 11.7905486396, 14.6421849368, 18.1835117495, 22.5813361171, 28.0428086641, 34.825181012, 43.2479230966, 53.7077711534, 66.697415176, 82.8287060814, 102.861475711, 127.739327173, 158.634081359, 197.000973197, 244.647197551, 303.81703348, 377.297556468, 468.549917976, 581.872375985, 722.602755747}
function Util_cvTokHz_raw_c0(index)
   return Util_cvTokHz_c0[index]
end

function Util_cvTokHz_raw_c1(index)
   return Util_cvTokHz_c1[index]
end

function Util_cvTokHz_raw_c2(index)
   return Util_cvTokHz_c2[index]
end

function Util_cvTokHz(cv)
   local index = int_clip(float_to_int((cv * 31.0)), 0, 31)
   return (Util_cvTokHz_c0[index] + (cv * (Util_cvTokHz_c1[index] + (Util_cvTokHz_c2[index] * cv))))
end

local Saturate_soft_tanh_table_c0 = {-4.19791679945, -4.08017302261, -3.96279424106, -3.84583261307, -3.72934117572, -3.61337380651, -3.49798517984, -3.38323071976, -3.26916654951, -3.15584943749, -3.04333673905, -2.93168633327, -2.8209565579, -2.71120613855, -2.60249411481, -2.49487976124, -2.38842250494, -2.28318183958, -2.17921723303, -2.07658803333, -1.97535336982, -1.87557204879, -1.77730244797, -1.68060240416, -1.58552909956, -1.49213894305, -1.40048744891, -1.31062911149, -1.22261727758, -1.13650401594, -1.05233998397, -0.970174292201, -0.890054367414, -0.812025813862, -0.736132273424, -0.66241528522, -0.590914144487, -0.521665762914, -0.454704528144, -0.390062165585, -0.327767601938, -0.267846831262, -0.210322783432, -0.155215197624, -0.102540498802, -0.0523116805546, -0.00453819273811, 0.0407741631544, 0.0836233325132, 0.12401109743, 0.161943157596, 0.197429201768, 0.230482968987, 0.26112229859, 0.289369167985, 0.315249718764, 0.338794268666, 0.360037309684, 0.379017492418, 0.395777593966, 0.41036447122, 0.422828997569, 0.433225982674, 0.441614075748, 0.448055651318, 0.452616677673, 0.455366567646, 0.456378011979, 0.455726795108, 0.453491593768, 0.449753758617, 0.444597079316, 0.438107533738, 0.430373021614, 0.421483084138, 0.411528609482, 0.40060152601, 0.388794484115, 0.376200528006, 0.362912758685, 0.349023989925, 0.33462639871, 0.319811171864, 0.304668150845, 0.289285476455, 0.273749235602, 0.258143112065, 0.242548043434, 0.227041886306, 0.211699092012, 0.19659039482, 0.181782515032, 0.167337878883, 0.153314357402, 0.139765026212, 0.126737948216, 0.114275980938, 0.10241661022, 0.0911918118538, 0.080627942498, 0.0707456611365, 0.0615598820902, 0.0530797604115, 0.045308710299, 0.0382444569168, 0.0318791217629, 0.0261993415378, 0.0211864201802, 0.0168165134925, 0.0130608455624, 0.00988595590594, 0.00725397604977, 0.00512293401641, 0.00344708496865, 0.00217726604862, 0.00126127325837, 0.000644258043125, 0.000269141079302, 7.70406239209e-05, 7.71266353338e-06, -0.0, -7.71266353338e-06, -7.70406239209e-05, -0.000269141079302, -0.000644258043132, -0.00126127325836, -0.00217726604861, -0.00344708496868, -0.00512293401644, -0.00725397604983, -0.00988595590594, -0.0130608455624, -0.0168165134928, -0.0211864201802, -0.0261993415376, -0.0318791217631, -0.0382444569168, -0.045308710299, -0.0530797604115, -0.0615598820902, -0.0707456611365, -0.0806279424975, -0.0911918118547, -0.10241661022, -0.114275980938, -0.126737948216, -0.139765026209, -0.153314357402, -0.167337878883, -0.181782515032, -0.19659039482, -0.211699092014, -0.227041886307, -0.242548043434, -0.258143112065, -0.273749235602, -0.289285476455, -0.304668150845, -0.319811171864, -0.33462639871, -0.349023989925, -0.362912758688, -0.376200528006, -0.388794484115, -0.40060152601, -0.411528609496, -0.421483084138, -0.430373021607, -0.438107533709, -0.444597079294, -0.449753758624, -0.453491593783, -0.455726795108, -0.456378011972, -0.455366567646, -0.452616677637, -0.448055651282, -0.441614075733, -0.43322598266, -0.422828997569, -0.41036447122, -0.395777593966, -0.379017492403, -0.360037309756, -0.33879426868, -0.315249718822, -0.28936916797, -0.261122298547, -0.230482969016, -0.197429201739, -0.161943157596, -0.12401109743, -0.0836233325132, -0.0407741631112, 0.00453819276689, 0.0523116804682, 0.102540498802, 0.155215197624, 0.210322783403, 0.267846831176, 0.327767601938, 0.390062165585, 0.454704528116, 0.521665762914, 0.590914144459, 0.662415285163, 0.736132273395, 0.812025813862, 0.890054367414, 0.970174292172, 1.05233998397, 1.13650401591, 1.22261727761, 1.31062911149, 1.40048744891, 1.49213894308, 1.58552909956, 1.68060240419, 1.77730244792, 1.87557204879, 1.97535336976, 2.07658803339, 2.17921723309, 2.28318183958, 2.38842250499, 2.49487976118, 2.60249411481, 2.71120613866, 2.82095655796, 2.93168633333, 3.04333673899, 3.15584943754, 3.26916654945, 3.38323071953, 3.49798517984, 3.61337380674, 3.72934117572, 3.84583261313, 3.96279424124, 4.08017302255, 4.1979167995}
local Saturate_soft_tanh_table_c1 = {0.676338139193, 0.686232300945, 0.696179026834, 0.706174754036, 0.716215752147, 0.726298120826, 0.73641778764, 0.746570506216, 0.75675185448, 0.766957233316, 0.777181865425, 0.787420794532, 0.797668884911, 0.807920821276, 0.818171109006, 0.828414074859, 0.838643868049, 0.84885446183, 0.8590396555, 0.86919307694, 0.87930818575, 0.889378276835, 0.899396484673, 0.909355788129, 0.919249015953, 0.929068852909, 0.938807846633, 0.948458415161, 0.958012855195, 0.967463351159, 0.976801985008, 0.986020746821, 0.995111546206, 1.00406622459, 1.0128765682, 1.02153432208, 1.03003120483, 1.03835892419, 1.04650919358, 1.05447374941, 1.06224436928, 1.06981289092, 1.07717123212, 1.08431141127, 1.09122556875, 1.09790598906, 1.10434512367, 1.11053561444, 1.1164703177, 1.12214232892, 1.12754500776, 1.13267200365, 1.13751728167, 1.14207514863, 1.14634027947, 1.15030774359, 1.15397303125, 1.15733207984, 1.16038129984, 1.16311760048, 1.1655384149, 1.16764172468, 1.1694260836, 1.17089064053, 1.1720351613, 1.17286004928, 1.17336636477, 1.17355584277, 1.17343090919, 1.17299469521, 1.17225104976, 1.1712045498, 1.16986050853, 1.16822498097, 1.16630476729, 1.1641074133, 1.16164120827, 1.15891517979, 1.15593908575, 1.15272340318, 1.14927931393, 1.14561868724, 1.14175405894, 1.13769860742, 1.13346612637, 1.12907099408, 1.12452813968, 1.11985300596, 1.11506150925, 1.11016999608, 1.105195197, 1.10015417755, 1.09506428661, 1.0899431022, 1.08480837512, 1.07967797039, 1.07456980698, 1.06950179595, 1.0644917772, 1.05955745538, 1.05471633495, 1.04998565496, 1.04538232372, 1.04092285377, 1.03662329748, 1.03249918358, 1.0285654551, 1.02483640881, 1.02132563688, 1.01804597065, 1.01500942725, 1.01222715914, 1.00970940688, 1.00746545553, 1.00550359491, 1.00383108383, 1.00245411872, 1.0013778067, 1.00060614335, 1.00014199519, 0.999987087199, 1.00014199519, 1.00060614335, 1.0013778067, 1.00245411872, 1.00383108383, 1.00550359491, 1.00746545553, 1.00970940688, 1.01222715914, 1.01500942725, 1.01804597065, 1.02132563688, 1.02483640881, 1.0285654551, 1.03249918358, 1.03662329748, 1.04092285377, 1.04538232372, 1.04998565496, 1.05471633495, 1.05955745538, 1.0644917772, 1.06950179595, 1.07456980698, 1.07967797039, 1.08480837512, 1.0899431022, 1.09506428661, 1.10015417755, 1.105195197, 1.11016999608, 1.11506150925, 1.11985300596, 1.12452813968, 1.12907099408, 1.13346612637, 1.13769860742, 1.14175405894, 1.14561868724, 1.14927931393, 1.15272340318, 1.15593908575, 1.15891517979, 1.16164120827, 1.1641074133, 1.16630476729, 1.16822498096, 1.16986050852, 1.1712045498, 1.17225104976, 1.17299469521, 1.17343090919, 1.17355584277, 1.17336636477, 1.17286004928, 1.17203516129, 1.17089064053, 1.16942608359, 1.16764172468, 1.1655384149, 1.16311760048, 1.16038129985, 1.15733207985, 1.15397303126, 1.15030774359, 1.14634027947, 1.14207514863, 1.13751728167, 1.13267200365, 1.12754500776, 1.12214232892, 1.1164703177, 1.11053561444, 1.10434512367, 1.09790598907, 1.09122556874, 1.08431141127, 1.07717123213, 1.06981289092, 1.06224436928, 1.05447374941, 1.04650919358, 1.03835892419, 1.03003120483, 1.02153432209, 1.0128765682, 1.00406622458, 0.995111546206, 0.986020746821, 0.976801985008, 0.967463351159, 0.958012855195, 0.948458415161, 0.938807846637, 0.929068852911, 0.919249015951, 0.909355788132, 0.899396484673, 0.889378276835, 0.87930818575, 0.86919307694, 0.8590396555, 0.848854461832, 0.838643868054, 0.828414074852, 0.818171108996, 0.80792082127, 0.797668884911, 0.787420794532, 0.777181865425, 0.766957233316, 0.75675185448, 0.746570506218, 0.736417787643, 0.726298120815, 0.716215752142, 0.706174754038, 0.696179026834, 0.686232300945, 0.676338139193}
local Saturate_soft_tanh_table_c2 = {0.0103257987532, 0.0105336535528, 0.0107443759568, 0.0109579386525, 0.0111743100128, 0.0113934538953, 0.0116153294376, 0.0118398908497, 0.0120670871995, 0.0122968621988, 0.0125291539825, 0.0127638948877, 0.0130010112283, 0.0132404230677, 0.0134820439916, 0.0137257808769, 0.0139715336621, 0.0142191951172, 0.0144686506132, 0.0147197778931, 0.0149724468471, 0.0152265192866, 0.0154818487259, 0.0157382801641, 0.0159956498778, 0.0162537852144, 0.0165125043973, 0.0167716163381, 0.0170309204577, 0.0172902065199, 0.0175492544769, 0.0178078343278, 0.0180657059925, 0.018322619203, 0.0185783134101, 0.0188325177125, 0.0190849508057, 0.019335320952, 0.019583325978, 0.0198286532956, 0.0200709799513, 0.0203099727047, 0.0205452881395, 0.020776572805, 0.021003463393, 0.0212255869522, 0.0214425611386, 0.0216539945058, 0.0218594868367, 0.0220586295179, 0.0222510059569, 0.0224361920454, 0.0226137566693, 0.0227832622652, 0.0229442654257, 0.0230963175554, 0.0232389655748, 0.023371752676, 0.0234942191279, 0.0236059031341, 0.0237063417382, 0.0237950717829, 0.0238716309158, 0.0239355586433, 0.0239863974348, 0.0240236938687, 0.0240469998238, 0.024055873713, 0.024049881754, 0.0240285992769, 0.0239916120646, 0.0239385177225, 0.0238689270724, 0.0237824655677, 0.0236787747262, 0.0235575135722, 0.0234183600855, 0.0232610126496, 0.0230851914973, 0.0228906401403, 0.0226771267847, 0.0224444457179, 0.0221924186673, 0.0219208961171, 0.0216297585814, 0.021318917823, 0.0209883180128, 0.0206379368198, 0.0202677864288, 0.0198779144736, 0.0194684048823, 0.0190393786276, 0.0185909943739, 0.0181234490157, 0.0176369781031, 0.0171318561465, 0.0166083967971, 0.0160669528988, 0.0155079164061, 0.0149317181674, 0.014338827569, 0.0137297520379, 0.0131050364039, 0.0124652621194, 0.0118110463372, 0.0111430408482, 0.01046193088, 0.00976843376073, 0.00906329745005, 0.00834729894291, 0.00762124255103, 0.00688595806783, 0.0061422988241, 0.00539113964124, 0.00463337469087, 0.00386991526903, 0.00310168749471, 0.00232962994232, 0.00155469121843, 0.000777827493592, -0.0, -0.000777827493592, -0.00155469121843, -0.00232962994232, -0.00310168749471, -0.00386991526903, -0.00463337469087, -0.00539113964124, -0.0061422988241, -0.00688595806783, -0.00762124255103, -0.00834729894291, -0.00906329745005, -0.00976843376073, -0.01046193088, -0.0111430408482, -0.0118110463372, -0.0124652621194, -0.0131050364039, -0.0137297520379, -0.014338827569, -0.0149317181674, -0.0155079164061, -0.0160669528988, -0.0166083967971, -0.0171318561465, -0.0176369781031, -0.0181234490157, -0.0185909943739, -0.0190393786276, -0.0194684048823, -0.0198779144736, -0.0202677864288, -0.0206379368198, -0.0209883180128, -0.021318917823, -0.0216297585814, -0.0219208961171, -0.0221924186673, -0.0224444457179, -0.0226771267847, -0.0228906401403, -0.0230851914972, -0.0232610126496, -0.0234183600855, -0.0235575135723, -0.0236787747262, -0.0237824655675, -0.0238689270722, -0.0239385177224, -0.0239916120646, -0.0240285992768, -0.0240498817539, -0.024055873713, -0.0240469998238, -0.0240236938685, -0.0239863974347, -0.0239355586433, -0.0238716309156, -0.023795071783, -0.0237063417382, -0.0236059031341, -0.0234942191281, -0.0233717526762, -0.023238965575, -0.0230963175555, -0.0229442654256, -0.0227832622652, -0.0226137566695, -0.0224361920454, -0.0222510059569, -0.0220586295179, -0.0218594868368, -0.0216539945057, -0.0214425611386, -0.0212255869523, -0.0210034633929, -0.020776572805, -0.0205452881397, -0.0203099727048, -0.0200709799513, -0.0198286532956, -0.019583325978, -0.0193353209519, -0.0190849508057, -0.0188325177128, -0.0185783134102, -0.0183226192029, -0.0180657059925, -0.0178078343278, -0.0175492544769, -0.0172902065199, -0.0170309204577, -0.0167716163381, -0.0165125043974, -0.0162537852144, -0.0159956498776, -0.0157382801642, -0.0154818487259, -0.0152265192866, -0.0149724468471, -0.0147197778931, -0.0144686506132, -0.0142191951172, -0.0139715336622, -0.0137257808768, -0.0134820439914, -0.0132404230676, -0.0130010112282, -0.0127638948877, -0.0125291539825, -0.0122968621988, -0.0120670871995, -0.0118398908497, -0.0116153294377, -0.0113934538951, -0.0111743100127, -0.0109579386526, -0.0107443759568, -0.0105336535528, -0.0103257987532}
function Saturate_soft_tanh_table_raw_c0(index)
   return Saturate_soft_tanh_table_c0[index]
end

function Saturate_soft_tanh_table_raw_c1(index)
   return Saturate_soft_tanh_table_c1[index]
end

function Saturate_soft_tanh_table_raw_c2(index)
   return Saturate_soft_tanh_table_c2[index]
end

function Saturate_soft_tanh_table(x)
   local index = int_clip(float_to_int(((x - -24.0) * 5.0)), 0, 240)
   return (Saturate_soft_tanh_table_c0[index] + (x * (Saturate_soft_tanh_table_c1[index] + (Saturate_soft_tanh_table_c2[index] * x))))
end

function Saturate_soft_process(x)
   return Saturate_soft_tanh_table(x)
end

function Saturate_soft_noteOn(note, velocity, channel)
end

function Saturate_soft_noteOff(note, channel)
end

function Saturate_soft_controlChange(control, value, channel)
end

function Saturate_soft_default()
end

local Svf_calc_g_c0 = {0.0023297121342, 0.0023298546088, 0.00233045116184, 0.00233185902529, 0.00233448558328, 0.00233879327177, 0.002345304882, 0.00235460929788, 0.00236736769964, 0.00238432026832, 0.0024062934282, 0.00243420766662, 0.00246908597383, 0.00251206294812, 0.00256439461487, 0.0026274690116, 0.00270281759463, 0.0027921275271, 0.00289725491211, 0.00302023903941, 0.00316331771902, 0.00332894378015, 0.00351980281965, 0.00373883229049, 0.00398924202665, 0.00427453630885, 0.00459853758246, 0.00496541194778, 0.00537969655148, 0.00584632901835, 0.00637067907278, 0.00695858251149, 0.00761637770123, 0.00835094479047, 0.0091697478379, 0.0100808800789, 0.01109311257, 0.012215946471, 0.0134596692489, 0.0148354151134, 0.0163552300223, 0.0180321416276, 0.0198802345697, 0.0219147315697, 0.0241520808116, 0.026610050165, 0.0293078288557, 0.0322661372583, 0.0355073455667, 0.0390556021866, 0.0429369727944, 0.0471795911305, 0.0518138227271, 0.0568724429334, 0.0623908307782, 0.0684071804325, 0.0749627322737, 0.0821020258488, 0.089873177371, 0.0983281847726, 0.107523263815, 0.117519219289, 0.128381855984, 0.140182434846, 0.152998180665, 0.166912848631, 0.1820173584, 0.198410505705, 0.216199763382, 0.235502185663, 0.256445432114, 0.279168930516, 0.303825201493, 0.330581371897, 0.359620909008, 0.391145613649, 0.42537791759, 0.462563539497, 0.502974564207, 0.546913023138, 0.594715069362, 0.646755860013, 0.703455282261, 0.765284687952, 0.832774837668, 0.906525298981, 0.987215598463, 1.07561849547, 1.17261583119, 1.27921751453, 1.39658434271, 1.52605552809, 1.66918202462, 1.82776703248, 2.00391542848, 2.20009434958, 2.41920778533, 2.66468886346, 2.94061461258, 3.25184945632, 3.60422567626, 4.00477177378, 4.46200335415, 4.98629626309, 5.59036884092, 6.28991022627, 7.10440600519, 8.05823323524, 9.18212717576, 10.5151669414, 12.1074947413, 14.0240862918, 16.3500497117, 19.1981825996, 22.7199237716, 27.1215060427, 32.6882461095, 39.8218629632, 49.0992002894, 61.3671397371, 77.9007261639, 100.67584908, 132.858501577, 179.724088962, 250.481346732, 362.134626616, 548.340291029, 881.845213708}
local Svf_calc_g_c1 = {0.0161451367461, 0.0161047333428, 0.016020019078, 0.0158866680377, 0.0157000326118, 0.0154551221278, 0.0151465801483, 0.0147686603516, 0.0143152009096, 0.0137795972705, 0.0131547732519, 0.0124331503406, 0.0116066150893, 0.0106664844967, 0.00960346924689, 0.0084076346776, 0.0070683593393, 0.00557429099714, 0.00391329991931, 0.00207242928489, 3.78425317371e-05, -0.00220523254288, -0.00467256313261, -0.00738097444089, -0.0103484165959, -0.0135940357122, -0.0171382493622, -0.021002826741, -0.0252109738314, -0.0297874238942, -0.0347585336406, -0.0401523854639, -0.0459988961426, -0.0523299324658, -0.0591794342551, -0.0665835453147, -0.0745807528818, -0.0832120361979, -0.0925210248867, -0.102554167885, -0.113360913761, -0.124993903309, -0.137509175442, -0.150966387488, -0.165429051128, -0.180964785334, -0.197645587885, -0.215548127145, -0.234754056048, -0.255350350485, -0.277429674529, -0.301090775291, -0.326438910565, -0.353586312856, -0.382652693854, -0.413765794074, -0.447061982975, -0.482686915708, -0.520796253563, -0.561556456199, -0.605145655082, -0.651754618958, -0.701587823859, -0.754864642273, -0.811820668345, -0.87270919878, -0.937802892451, -1.00739563538, -1.08180464256, -1.16137283312, -1.24647152203, -1.33750347883, -1.43490641282, -1.53915695512, -1.65077522016, -1.77033004523, -1.8984450238, -2.03580547164, -2.18316648993, -2.34136232227, -2.51131724104, -2.69405824545, -2.89072991127, -3.1026118024, -3.33113894102, -3.57792593949, -3.84479552919, -4.1338123863, -4.44732335864, -4.78800545724, -5.15892329984, -5.5635981072, -6.00609087894, -6.49110305004, -7.02409879945, -7.61145431206, -8.26064076948, -8.98044978614, -9.78127257496, -10.6754475544, -11.6776957174, -12.8056693262, -14.080648042, -15.5284283777, -17.1804687883, -19.0753758228, -21.2608496589, -23.7962547095, -26.7560500423, -30.2344163878, -34.3515694527, -39.2624820657, -45.1690980837, -52.3376890743, -61.1239181409, -72.0096757269, -85.6582763074, -102.998963211, -125.359415415, -154.679171154, -193.863953636, -247.394573103, -322.415669199, -430.774375508, -593.051114038, -847.065734426, -1267.3153483, -2014.05215379}
local Svf_calc_g_c2 = {0.0573501300083, 0.0602145352577, 0.0632220172087, 0.0663797243096, 0.0696951624437, 0.0731762128441, 0.0768311509167, 0.0806686660133, 0.0846978822052, 0.0889283801126, 0.09337021984, 0.0980339650801, 0.102930708445, 0.108072098091, 0.113470365708, 0.11913835594, 0.125089557325, 0.131338134828, 0.137898964057, 0.144787667258, 0.152020651186, 0.159615146959, 0.167589252007, 0.175961974246, 0.184753278586, 0.193984135941, 0.203676574865, 0.213853735999, 0.224539929479, 0.235760695517, 0.247542868345, 0.259914643748, 0.272905650424, 0.286547025449, 0.300871494114, 0.315913454463, 0.331709066877, 0.34829634909, 0.365715277042, 0.384007892054, 0.403218414839, 0.423393366912, 0.444581700051, 0.466834934529, 0.490207306911, 0.514755928303, 0.540540954099, 0.567625766344, 0.596077169987, 0.625965604528, 0.657365372653, 0.690354887787, 0.725016942661, 0.761439001372, 0.799713517647, 0.839938282574, 0.882216805371, 0.926658731422, 0.97338030233, 1.02250486353, 1.07416342583, 1.12849528818, 1.18564873016, 1.24578178393, 1.30906309709, 1.37567289939, 1.44580408886, 1.51966345472, 1.59747305808, 1.67947179433, 1.76591716535, 1.85708729454, 1.95328322314, 2.05483153312, 2.16208734971, 2.27543778653, 2.39530590677, 2.52215528848, 2.65649529731, 2.79888719, 2.94995119578, 3.11037475105, 3.28092209756, 3.46244549726, 3.65589836847, 3.86235071258, 4.0830072791, 4.31922901591, 4.57255847285, 4.84474998139, 5.13780562522, 5.4540182612, 5.79602316111, 6.16686024174, 6.57004936302, 7.00968183613, 7.49053214727, 8.01819503528, 8.5992545582, 9.24149377617, 9.95415635021, 10.7482749699, 11.6370864537, 12.6365601513, 13.7660757109, 15.0492995212, 16.5153279467, 18.2001924913, 20.1488613184, 22.4179294755, 25.0792767833, 28.2251038718, 31.9749599674, 36.485695443, 41.9657844472, 48.6963025519, 57.0622533991, 67.6003655378, 81.0737845857, 98.5919681184, 121.809059426, 153.263633299, 196.984118172, 259.618608975, 352.66114466, 497.133891008, 734.250370077, 1152.24705467}
function Svf_calc_g_raw_c0(index)
   return Svf_calc_g_c0[index]
end

function Svf_calc_g_raw_c1(index)
   return Svf_calc_g_c1[index]
end

function Svf_calc_g_raw_c2(index)
   return Svf_calc_g_c2[index]
end

function Svf_calc_g(cv)
   local index = int_clip(float_to_int((cv * 141.111111111)), 0, 127)
   return (Svf_calc_g_c0[index] + (cv * (Svf_calc_g_c1[index] + (Svf_calc_g_c2[index] * cv))))
end

function Svf_process(_ctx, x, cv, q, sel)
   q = (0.5 + q)
   if (Util_change(_ctx.inst_1b0a2, cv) or Util_change(_ctx.inst_2b0a2, q)) then
      do
         _ctx.g = Svf_calc_g(cv)
         _ctx.r = (1.0 / (2.0 * (q + eps())))
         _ctx.inv_den = (1.0 / (1.0 + ((2.0 * (_ctx.r * _ctx.g)) + (_ctx.g * _ctx.g))))
      end
   end
   local high = ((x + ((-(((2.0 * _ctx.r) + _ctx.g) * _ctx.z1)) + (-_ctx.z2))) * _ctx.inv_den)
   local band = ((high * _ctx.g) + _ctx.z1)
   local low = ((band * _ctx.g) + _ctx.z2)
   local notch = (high + low)
   _ctx.z1 = (band + (high * _ctx.g))
   _ctx.z2 = (low + (band * _ctx.g))
   local output = 0.0
   if (sel == 0) then
      output = low
   else
      if (sel == 1) then
         output = high
      else
         if (sel == 2) then
            output = band
         else
            output = notch
         end
      end
   end
   return Saturate_soft_process(output)
end

function Svf_noteOn(_ctx, note, velocity, channel)
end

function Svf_noteOff(_ctx, note, channel)
end

function Svf_controlChange(_ctx, control, value, channel)
end

function Svf_default(_ctx)
   _ctx.g = Svf_calc_g(0.0)
   _ctx.r = 1.0
   _ctx.inv_den = (1.0 / (1.0 + ((0.0 * _ctx.g) + (_ctx.g * _ctx.g))))
end

