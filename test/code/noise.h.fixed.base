/* This code was generated by the Vult compiler v1-dev https://github.com/modlfo/vult */
#ifndef NOISE_H
#define NOISE_H

#include "vultin.h"
#include "noise.tables.h"

typedef struct Noise_pinker_type {
   fix16_t w1;
} Noise_pinker_type;

typedef struct Noise_process_type {
   Noise_pinker_type inst_16d3d;
   int32_t x1;
   int32_t x2;
} Noise_process_type;

typedef struct Noise_process_type Noise_noteOn_type;

typedef struct Noise_process_type Noise_noteOff_type;

typedef struct Noise_process_type Noise_controlChange_type;

typedef struct Noise_process_type Noise_default_type;

static_inline void Noise_pinker_type_init(Noise_pinker_type& _ctx) {
   _ctx.w1 = 0x0 /* 0.000000 */;
}

static_inline void Noise_process_type_init(Noise_process_type& _ctx) {
   Noise_pinker_type_init(_ctx.inst_16d3d);
   _ctx.x1 = 0;
   _ctx.x2 = 0;
}

static_inline void Noise_noteOn_type_init(Noise_noteOn_type& _ctx) {
   Noise_process_type_init(_ctx);
}

static_inline void Noise_noteOff_type_init(Noise_noteOff_type& _ctx) {
   Noise_process_type_init(_ctx);
}

static_inline void Noise_controlChange_type_init(Noise_controlChange_type& _ctx) {
   Noise_process_type_init(_ctx);
}

static_inline void Noise_default_type_init(Noise_default_type& _ctx) {
   Noise_process_type_init(_ctx);
}

static_inline fix16_t Noise_pinker(Noise_pinker_type& _ctx, fix16_t x) {
   fix16_t b0 = 0x718 /* 0.027713 */;
   fix16_t b1 = 0x718 /* 0.027713 */;
   fix16_t a1 = -0xf1cf /* -0.944574 */;
   fix16_t w0 = x + (- fix_mul(a1, _ctx.w1));
   fix16_t y0 = fix_mul(b0, w0) + fix_mul(b1, _ctx.w1);
   _ctx.w1 = w0;
   return y0;
}

fix16_t Noise_process(Noise_process_type& _ctx, fix16_t color);

static_inline void Noise_noteOn(Noise_process_type& _ctx, int32_t note, int32_t velocity, int32_t channel) {
}

static_inline void Noise_noteOff(Noise_process_type& _ctx, int32_t note, int32_t channel) {
}

static_inline void Noise_controlChange(Noise_process_type& _ctx, int32_t control, int32_t value, int32_t channel) {
}

static_inline void Noise_default(Noise_process_type& _ctx) {
}


#endif // NOISE_H
