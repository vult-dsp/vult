/* This code was generated by the Vult compiler v1-dev https://github.com/vult-dsp/vult */
#ifndef GENERICARRAYS_H
#define GENERICARRAYS_H

#include "vultin.h"
#include "GenericArrays.tables.h"

template<std::size_t SIZE_0>
static_inline float GenericArrays_sum(const std::array<float, SIZE_0>& data) {
   float total = 0.0f;
   int32_t i__1 = 0;
   while (i__1 < data.size()) {
      total = total + data[static_cast<uint32_t>(i__1)];
      i__1 = 1 + i__1;
   }
   return total;
}

static_inline void GenericArrays_test1() {
   std::array<float, 3> data1 = { 1.0f, 2.0f, 3.0f };
   std::array<float, 4> data2 = { 1.0f, 2.0f, 3.0f, 4.0f };
   float result1 = GenericArrays_sum(data1);
   float result2 = GenericArrays_sum(data2);
}


#endif // GENERICARRAYS_H
