/*
The MIT License (MIT)

Copyright (c) 2014-2024 Leonardo Laguna Ruiz
-----
Implements the resonant filter simulation as shown in
http://en.wikipedia.org/wiki/Phase_distortion_synthesis

*/

fun process(cv,detune) {
	 mem pre_phase1;
   val phase1 = Phase.process(cv, 0.0);
   val comp   = 1.0 - phase1;
   val reset  = pre_phase1 - phase1;
   pre_phase1 = phase1;
   val phase2 = Phase.process(cv + Util.smooth(detune / 2.0), reset);
   val sine  = Tables.nsine(phase2);
   return sine * comp;
}
and noteOn(note:int,velocity:int,channel:int){ }
and noteOff(note:int,channel:int){ }
and controlChange(control:int,value:int,channel:int){ }
and default(){ }